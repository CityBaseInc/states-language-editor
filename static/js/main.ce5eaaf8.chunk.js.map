{"version":3,"sources":["store.js","Node.jsx","Control.jsx","parser.js","actions.js","editor.js","DagreD3React.js","Graph.js","JSONDisplay.js","Homepage.js","App.js","serviceWorker.js","index.js"],"names":["initialState","editor_graph","d3_graph","nodes","edges","states_language_graph","graph","states_language_graph_editor","graph_loaded","store","createStore","state","action","new_state","Object","objectSpread2","type","MyNode","_Node","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","node","bindSocket","bindControl","_this$state","outputs","controls","inputs","selected","react_default","a","createElement","className","concat","name","map","input","react_render_plugin_esm","socket","io","innerRef","showControl","control","output","Node","TextControl","emitter","_this","default_value","length","undefined","readonly","call","component","initial","data","onChange","v","setValue","trigger","placeholder","val","putData","update","Rete","Control","_ref","ref","addEventListener","e","stopPropagation","target","IntegerControl","_this2","_ref3","BooleanControl","_this3","_ref5","checked","states_language_editor","id","graph_list","States","res","reduce","acc","toString","get_editor_data","Type","start","connections","transition_event","position","create_edge_nodes","Catch","cat","source","get_node_by_name","Next","editor_edge_node","ErrorEquals","join","Choices","ch","StringEquals","TransitionEvent","event","push","next","get_editor_data_task","get_editor_data_choice","get_editor_data_wait","resource","Resource","input_path","InputPath","output_path","OutputPath","resource_path","ResourcePath","is_end","End","seconds","Seconds","seconds_path","SecondsPath","timestamp","Timestamp","timestamp_path","TimestampPath","to_states_language","get_states_language_state","get_sl_task","get_sl_wait","get_sl_choice","get_transition_event","t_e","catches","get_catches","choices","get_choices","choice","parseInt","filter","edge","is_catch_event","is_choice_event","find","is_trans_event","keys","graph_states","endsWith","graph_edges","flatMap","get_node_edges","to_d3_nodes","state_nodes","i","label","c","target_id","get_event_name","get_node_outputs","to_d3_edges","get_node_index","editor_states_language","n","state_edges","StartAt","editor_d3","errors","events","split","trim","findIndex","SET_D3_GRAPH","SET_STATES_LANGUAGE_GRAPH","SET_GRAPH_LOADED","SET_STATES_LANGUAGE_EDITOR_GRAPH","doSetD3Graph","doSetStatesLanguageGraph","doSetGraphLoaded","transition_socket","Socket","catch_socket","choice_socket","next_socket","TaskComponent","inp","Input","te","Output","ce","editor","addInput","addOutput","addControl","Component","ChoiceComponent","WaitComponent","TransitionEventComponent","out","ctrl","CatchEventComponent","ChoiceEventComponent","init","container","components","regenerator_default","async","_context2","prev","abrupt","NodeEditor","use","ConnectionPlugin","ReactRenderPlugin","ContextMenuPlugin","AreaPlugin","MinimapPlugin","AutoArrangePlugin","margin","x","y","depth","register","on","_context","toJSON","dispatch","stop","fromJSON","setTimeout","view","resize","zoomAt","DagreD3","nodeTree","nodeTreeGroup","width","height","onClick","useEffect","g","dagreD3","Graph","multigraph","setGraph","forEach","st","setNode","link","setEdge","rx","ry","svg","d3","inner","zoom","attr","transform","render","scale","selectAll","elem","classList","remove","add","r","useSelector","DagreD3React","JSONDisplay","Button","variant","color","cols","rows","JSON","stringify","console","log","obj","parse","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","defineProperty","overflowX","spacing","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Homepage","classes","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","Typography","noWrap","IconButton","Container","maxWidth","Grid","item","xs","md","lg","Paper","el","src_Graph","src_JSONDisplay","history","createBrowserHistory","App","react_router","path","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ce5eaaf8.chunk.js","sourcesContent":["import { createStore } from 'redux';\nimport graph from './states_language_test.json';\n\nconst initialState = {\n  editor_graph: {},\n  d3_graph: { nodes: [], edges: [] },\n  states_language_graph: graph,\n  states_language_graph_editor: graph,\n  graph_loaded: true,\n};\n\nfunction updateState(state, action) {\n  let new_state = { ...state };\n  switch (action.type) {\n    case 'SET_EDITOR_GRAPH':\n      new_state.editor_graph = action.graph;\n      break;\n    case 'SET_D3_GRAPH':\n      new_state.d3_graph = action.graph;\n      break;\n    case 'SET_STATES_LANGUAGE_GRAPH':\n      new_state.states_language_graph = action.graph;\n      break;\n    case 'SET_STATES_LANGUAGE_EDITOR_GRAPH':\n      new_state.states_language_graph_editor = new_state.states_language_graph;\n      break;\n    case 'SET_GRAPH_LOADED':\n      new_state.graph_loaded = action.graph_loaded;\n      break;\n    default:\n      break;\n  }\n  return new_state;\n}\n\nlet store = createStore(updateState, initialState);\n\nexport default store;\n","import React from 'react';\nimport { Node, Socket, Control } from 'rete-react-render-plugin';\n\nexport class MyNode extends Node {\n  render() {\n    const { node, bindSocket, bindControl } = this.props;\n    const { outputs, controls, inputs, selected } = this.state;\n    return (\n      <div className={`node ${selected} ${node.name}`}>\n        <div className=\"title\">{node.name}</div>\n        {/* Inputs */}\n        {inputs.map(input => (\n          <div className=\"input\" key={input.key}>\n            <Socket\n              type=\"input\"\n              socket={input.socket}\n              io={input}\n              innerRef={bindSocket}\n            />\n            {!input.showControl() && (\n              <div className=\"input-title\">{input.name}</div>\n            )}\n            {input.showControl() && (\n              <Control\n                className=\"input-control\"\n                control={input.control}\n                innerRef={bindControl}\n              />\n            )}\n          </div>\n        ))}\n        {/* Controls */}\n        {controls.map(control => (\n          <Control\n            className=\"control\"\n            key={control.key}\n            control={control}\n            innerRef={bindControl}\n          />\n        ))}\n        {/* Outputs */}\n        {outputs.map(output => (\n          <div className=\"output\" key={output.key}>\n            <div className=\"output-title\">{output.name}</div>\n            <Socket\n              type=\"output\"\n              socket={output.socket}\n              io={output}\n              innerRef={bindSocket}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Rete from 'rete';\n\nclass TextControl extends Rete.Control {\n  static component = ({ value, onChange, placeholder }) => (\n    <input\n      value={value}\n      placeholder={placeholder}\n      ref={ref => {\n        ref && ref.addEventListener('pointerdown', e => e.stopPropagation());\n      }}\n      onChange={e => onChange(e.target.value)}\n    />\n  );\n\n  constructor(emitter, key, node, default_value = '', readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = TextControl.component;\n\n    const initial = node.data[key] || default_value;\n\n    node.data[key] = initial;\n    this.props = {\n      readonly,\n      value: initial,\n      onChange: v => {\n        this.setValue(v);\n        this.emitter.trigger('process');\n      },\n      placeholder: key,\n    };\n  }\n\n  setValue(val) {\n    this.props.value = val;\n    this.putData(this.key, val);\n    this.update();\n  }\n}\n\nclass IntegerControl extends Rete.Control {\n  static component = ({ value, onChange, placeholder }) => (\n    <input\n      type=\"number\"\n      value={value}\n      placeholder={placeholder}\n      ref={ref => {\n        ref && ref.addEventListener('pointerdown', e => e.stopPropagation());\n      }}\n      onChange={e => onChange(e.target.value)}\n    />\n  );\n\n  constructor(emitter, key, node, readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = IntegerControl.component;\n\n    const initial = node.data[key] || '';\n\n    node.data[key] = initial;\n    this.props = {\n      readonly,\n      value: initial,\n      onChange: v => {\n        this.setValue(v);\n        this.emitter.trigger('process');\n      },\n      placeholder: key\n    };\n  }\n\n  setValue(val) {\n    this.props.value = val;\n    this.putData(this.key, val);\n    this.update();\n  }\n}\n\nclass BooleanControl extends Rete.Control {\n  static component = ({ value, onChange, placeholder }) => (\n    <label><input\n      type=\"checkbox\"\n      value={placeholder}\n      checked={value}\n      ref={ref => {\n        ref && ref.addEventListener('pointerdown', e => e.stopPropagation());\n      }}\n      onChange={e => onChange(e.target.checked)}\n    />{placeholder}</label>\n  );\n\n  constructor(emitter, key, node, readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = BooleanControl.component;\n\n    const initial = node.data[key] || false;\n\n    node.data[key] = initial;\n    this.props = {\n      readonly,\n      value: initial,\n      onChange: v => {\n        this.setValue(v);\n        this.emitter.trigger('process');\n      },\n      placeholder: key\n    };\n  }\n\n  setValue(val) {\n    this.props.value = val;\n    this.putData(this.key, val);\n    this.update();\n  }\n}\n\nexport { TextControl, BooleanControl, IntegerControl }\n\n","export const states_language_editor = graph => {\n  let id = 1;\n  let nodes = graph_list(graph.States);\n  let res = { id: 'states-language@0.1.0', nodes: {} };\n  res.nodes = nodes.reduce((acc, node) => {\n    acc[id.toString()] = {\n      id: id,\n      data: get_editor_data(node),\n      name: node.Type,\n      inputs: { start: { connections: [] } },\n      outputs: { transition_event: { connections: [] } },\n      position: [id * 100, id * 100],\n    };\n    id++;\n    return acc;\n  }, res.nodes);\n\n  res.nodes = create_edge_nodes(nodes, res.nodes, id);\n  return res;\n};\n\nconst create_edge_nodes = (nodes, acc, id) => {\n  return nodes.reduce((acc, node) => {\n    if (node.Catch) {\n      acc = node.Catch.reduce((acc, cat) => {\n        let source = get_node_by_name(node.id, acc);\n        let target = get_node_by_name(cat.Next, acc);\n        acc[id.toString()] = editor_edge_node(\n          id,\n          'catch_events',\n          'start',\n          'CatchEvent',\n          cat.ErrorEquals.join(','),\n          source,\n          target\n        );\n        id++;\n        return acc;\n      }, acc);\n    }\n    if (node.Choices) {\n      acc = node.Choices.reduce((acc, ch) => {\n        let source = get_node_by_name(node.id, acc);\n        let target = get_node_by_name(ch.Next, acc);\n        acc[id.toString()] = editor_edge_node(\n          id,\n          'choice_events',\n          'start',\n          'ChoiceEvent',\n          ch.StringEquals,\n          source,\n          target\n        );\n        id++;\n        return acc;\n      }, acc);\n    }\n    if (node.Next) {\n      let source = get_node_by_name(node.id, acc);\n      let target = get_node_by_name(node.Next, acc);\n      acc[id.toString()] = editor_edge_node(\n        id,\n        'transition_event',\n        'start',\n        'TransitionEvent',\n        node.TransitionEvent,\n        source,\n        target\n      );\n      id++;\n    }\n    return acc;\n  }, acc);\n};\n\nconst editor_edge_node = (id, input, output, name, event, source, target) => {\n  source.outputs = source.outputs || {};\n  source.outputs[input] = source.outputs[input] || {};\n  source.outputs[input].connections = source.outputs[input].connections || [];\n  source.outputs[input].connections.push({\n    node: id,\n    input: 'event',\n    data: {},\n  });\n  target.inputs = target.inputs || {};\n  target.inputs[output] = target.inputs[output] || {};\n  target.inputs[output].connections = target.inputs[output].connections || [];\n  target.inputs[output].connections.push({\n    node: id,\n    output: 'next',\n    data: {},\n  });\n  return {\n    name: name,\n    id: id,\n    position: [id * 100, id * 100],\n    data: {\n      event: event,\n    },\n    inputs: {\n      event: {\n        connections: [\n          {\n            node: source.id,\n            output: input,\n            data: {},\n          },\n        ],\n      },\n    },\n    outputs: {\n      next: {\n        connections: [\n          {\n            node: target.id,\n            input: output,\n            data: {},\n          },\n        ],\n      },\n    },\n  };\n};\n\nconst get_node_by_name = (name, nodes) => {\n  for (let id in nodes) {\n    if (nodes[id].data.name === name) return nodes[id];\n  }\n};\n\nconst get_editor_data = node => {\n  switch (node.Type) {\n    case 'Task':\n      return get_editor_data_task(node);\n    case 'Choice':\n      return get_editor_data_choice(node);\n    case 'Wait':\n      return get_editor_data_wait(node);\n    default:\n      return {};\n  }\n};\n\nconst get_editor_data_task = node => {\n  return {\n    resource: node.Resource,\n    name: node.id,\n    input_path: node.InputPath,\n    output_path: node.OutputPath,\n    resource_path: node.ResourcePath,\n    is_end: node.End ? node.End : false,\n  };\n};\n\nconst get_editor_data_choice = node => {\n  return {\n    resource: node.Resource,\n    name: node.id,\n    input_path: node.InputPath,\n    output_path: node.OutputPath,\n    is_end: node.End ? node.End : false,\n  };\n};\n\nconst get_editor_data_wait = node => {\n  return {\n    name: node.id,\n    seconds: node.Seconds,\n    seconds_path: node.SecondsPath,\n    timestamp: node.Timestamp,\n    timestamp_path: node.TimestampPath,\n    is_end: node.End ? node.End : false,\n  };\n};\n\nconst to_states_language = (nodes, edges) => {\n  return nodes.reduce((acc, node) => {\n    acc[node.data.name] = get_states_language_state(node, edges);\n    return acc;\n  }, {});\n};\n\nconst get_states_language_state = (node, edges) => {\n  switch (node.name) {\n    case 'Task':\n      return get_sl_task(node, edges);\n    case 'Wait':\n      return get_sl_wait(node, edges);\n    case 'Choice':\n      return get_sl_choice(node, edges);\n    default:\n      return {};\n  }\n};\n\nconst get_sl_task = (node, edges) => {\n  let next = get_transition_event(node, edges);\n  let t_e = next ? next.type.join(',') : '';\n  let catches = get_catches(node, edges).map(cat => ({\n    ErrorEquals: cat.type,\n    Next: cat.target.data.name,\n  }));\n  return {\n    Type: node.name,\n    Resource: node.data.resource,\n    TransitionEvent: t_e,\n    Catch: catches,\n    InputPath: node.data.input_path,\n    OutputPath: node.data.output_path,\n    ResourcePath: node.data.resource_path,\n    Next: next ? next.target.data.name : '',\n    End: node.data.is_end,\n  };\n};\n\nconst get_sl_choice = (node, edges) => {\n  let choices = get_choices(node, edges).map(choice => ({\n    StringEquals: choice.type.join(', '),\n    Next: choice.target.data.name,\n  }));\n  return {\n    Type: node.name,\n    Resource: node.data.resource,\n    Choices: choices,\n    InputPath: node.data.input_path,\n    OutputPath: node.data.output_path,\n  };\n};\n\nconst get_sl_wait = (node, edges) => {\n  let next = get_transition_event(node, edges);\n  let t_e = next ? next.type.join(',') : '';\n  let res = {\n    Type: node.name,\n    TransitionEvent: t_e,\n    Next: next ? next.target.data.name : '',\n    End: node.data.is_end,\n  };\n  if (node.data.seconds) res['Seconds'] = parseInt(node.data.seconds);\n  if (node.data.timestamp) res['Timestamp'] = node.data.timestamp;\n  if (node.data.timestamp_path) res['TimestampPath'] = node.data.timestamp_path;\n  if (node.data.seconds_path) res['SecondsPath'] = node.data.seconds_path;\n  return res;\n};\n\nconst get_catches = (node, edges) =>\n  edges.filter(edge => is_catch_event(edge, node));\n\nconst is_catch_event = (edge, node) =>\n  edge.source.data.name === node.data.name && edge.event.name === 'CatchEvent';\n\nconst get_choices = (node, edges) =>\n  edges.filter(edge => is_choice_event(edge, node));\n\nconst is_choice_event = (edge, node) =>\n  edge.source.data.name === node.data.name && edge.event.name === 'ChoiceEvent';\n\nconst get_transition_event = (node, edges) =>\n  edges.find(edge => is_trans_event(edge, node));\n\nconst is_trans_event = (edge, node) =>\n  edge.source.data.name === node.data.name &&\n  edge.event.name === 'TransitionEvent';\n\nconst graph_list = nodes =>\n  Object.keys(nodes).reduce((acc, key) => {\n    nodes[key].id = key;\n    acc.push(nodes[key]);\n    return acc;\n  }, []);\n\nconst graph_states = graph_list =>\n  graph_list.filter(node => !node.name.endsWith('Event'));\n\nconst graph_edges = (graph_states, graph) =>\n  graph_states.flatMap(node => get_node_edges(node, graph));\n\nconst to_d3_nodes = (state_nodes, i = 0) =>\n  state_nodes.map(node => {\n    return { id: i++, label: node.name, name: node.data.name };\n  });\n\nconst get_node_edges = (node, graph, nodes) =>\n  Object.keys(node.outputs).flatMap(key =>\n    get_node_outputs(key, node, graph, nodes)\n  );\n\nconst to_d3_edges = (graph_edges, nodes) =>\n  graph_edges.map(edge => {\n    let target = get_node_index(edge.target.data.name, nodes);\n    let source = get_node_index(edge.source.data.name, nodes);\n    return {\n      source: source,\n      target: target,\n      type: edge.type,\n    };\n  });\n\nexport function editor_states_language(graph) {\n  let n = graph_list(graph.nodes);\n  let state_nodes = graph_states(n);\n  let state_edges = graph_edges(state_nodes, graph);\n  return {\n    StartAt: 'Test',\n    States: to_states_language(state_nodes, state_edges),\n  };\n}\n\nexport function editor_d3(graph) {\n  let n = graph_list(graph.nodes);\n  let state_nodes = graph_states(n);\n  let nodes = to_d3_nodes(state_nodes);\n  let state_edges = graph_edges(state_nodes, graph);\n  let edges = to_d3_edges(state_edges, nodes);\n  return { nodes: nodes, edges: edges };\n}\n\nfunction get_node_outputs(key, node, graph) {\n  let conns = node.outputs[key].connections;\n  return conns.reduce((acc, c) => {\n    let event = graph.nodes[c.node.toString()];\n    if (event.outputs.next.connections.length > 0) {\n      let target_id = event.outputs.next.connections[0].node.toString();\n      let target = graph.nodes[target_id];\n      acc.push({\n        source: node,\n        target: target,\n        event: event,\n        type: get_event_name(event),\n      });\n    }\n    return acc;\n  }, []);\n}\n\nfunction get_event_name(event) {\n  var name = '';\n  if (event.data.errors) {\n    name = event.data.errors;\n  } else if (event.data.event) {\n    name = event.data.event;\n  } else if (event.data.events) {\n    name = event.data.events;\n  }\n\n  return name.split(',').map(n => n.trim());\n}\n\nfunction get_node_index(name, nodes) {\n  return nodes.findIndex(n => n.name === name);\n}\n","const SET_D3_GRAPH = 'SET_D3_GRAPH';\nconst SET_EDITOR_GRAPH = 'SET_EDITOR_GRAPH';\nconst SET_STATES_LANGUAGE_GRAPH = 'SET_STATES_LANGUAGE_GRAPH';\nconst SET_GRAPH_LOADED = 'SET_GRAPH_LOADED';\nconst SET_STATES_LANGUAGE_EDITOR_GRAPH = 'SET_STATES_LANGUAGE_EDITOR_GRAPH';\n\nexport function doSetD3Graph(graph) {\n  return { type: SET_D3_GRAPH, graph: graph };\n}\n\nexport function doSetEditorGraph(graph) {\n  return { type: SET_EDITOR_GRAPH, graph: graph };\n}\n\nexport function doSetStatesLanguageGraph(graph) {\n  return { type: SET_STATES_LANGUAGE_GRAPH, graph: graph };\n}\n\nexport function doSetGraphLoaded(graph_loaded) {\n  return { type: SET_GRAPH_LOADED, graph_loaded: graph_loaded };\n}\n\nexport function doSetStatesLanguageEditorGraph() {\n  return { type: SET_STATES_LANGUAGE_EDITOR_GRAPH };\n}\n","import Rete from 'rete';\nimport ReactRenderPlugin from 'rete-react-render-plugin';\nimport ConnectionPlugin from 'rete-connection-plugin';\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin';\nimport AreaPlugin from 'rete-area-plugin';\nimport MinimapPlugin from 'rete-minimap-plugin';\nimport { MyNode } from './Node';\nimport { TextControl, BooleanControl, IntegerControl } from './Control';\nimport {\n  editor_d3,\n  states_language_editor,\n  editor_states_language,\n} from './parser';\nimport { doSetD3Graph, doSetStatesLanguageGraph } from './actions';\nimport store from './store';\n\nvar transition_socket = new Rete.Socket('Transition Event');\nvar catch_socket = new Rete.Socket('Catch Event');\nvar choice_socket = new Rete.Socket('Choice Event');\nvar next_socket = new Rete.Socket('Next');\n\nclass TaskComponent extends Rete.Component {\n  constructor() {\n    super('Task');\n  }\n\n  builder(node) {\n    var inp = new Rete.Input('start', 'Start', next_socket, true);\n    var te = new Rete.Output(\n      'transition_event',\n      'Transition Event',\n      transition_socket\n    );\n    var ce = new Rete.Output('catch_events', 'Catch Events', catch_socket);\n    var name = new TextControl(this.editor, 'name', node);\n    var resource = new TextControl(this.editor, 'resource', node);\n    var input_path = new TextControl(this.editor, 'input_path', node);\n    var resource_path = new TextControl(this.editor, 'resource_path', node);\n    var output_path = new TextControl(this.editor, 'output_path', node);\n    var is_end = new BooleanControl(this.editor, 'is_end', node);\n    return node\n      .addInput(inp)\n      .addOutput(te)\n      .addOutput(ce)\n      .addControl(name)\n      .addControl(resource)\n      .addControl(input_path)\n      .addControl(resource_path)\n      .addControl(output_path)\n      .addControl(is_end);\n  }\n}\n\nclass ChoiceComponent extends Rete.Component {\n  constructor() {\n    super('Choice');\n  }\n\n  builder(node) {\n    var inp = new Rete.Input('start', 'Start', next_socket, true);\n    var ce = new Rete.Output('choice_events', 'Choice Events', choice_socket);\n    var resource = new TextControl(this.editor, 'resource', node);\n    var name = new TextControl(this.editor, 'name', node);\n    var input_path = new TextControl(this.editor, 'input_path', node);\n    var output_path = new TextControl(this.editor, 'output_path', node);\n\n    return node\n      .addInput(inp)\n      .addOutput(ce)\n      .addControl(name)\n      .addControl(resource)\n      .addControl(input_path)\n      .addControl(output_path);\n  }\n}\n\nclass WaitComponent extends Rete.Component {\n  constructor() {\n    super('Wait');\n  }\n\n  builder(node) {\n    var inp = new Rete.Input('start', 'Start', next_socket, true);\n    var te = new Rete.Output(\n      'transition_event',\n      'Transition Event',\n      transition_socket\n    );\n    var name = new TextControl(this.editor, 'name', node);\n    var seconds = new IntegerControl(this.editor, 'seconds', node);\n    var timestamp = new TextControl(this.editor, 'timestamp', node);\n    var seconds_path = new TextControl(this.editor, 'seconds_path', node);\n    var timestamp_path = new TextControl(this.editor, 'timestamp_path', node);\n    var is_end = new BooleanControl(this.editor, 'is_end', node);\n    return node\n      .addInput(inp)\n      .addOutput(te)\n      .addControl(name)\n      .addControl(seconds)\n      .addControl(timestamp)\n      .addControl(seconds_path)\n      .addControl(timestamp_path)\n      .addControl(is_end);\n  }\n}\nclass TransitionEventComponent extends Rete.Component {\n  constructor() {\n    super('TransitionEvent');\n  }\n\n  builder(node) {\n    var inp = new Rete.Input('event', '=', transition_socket, true);\n    var out = new Rete.Output('next', 'Next', next_socket);\n    var ctrl = new TextControl(this.editor, 'event', node);\n    return node\n      .addInput(inp)\n      .addOutput(out)\n      .addControl(ctrl);\n  }\n}\n\nclass CatchEventComponent extends Rete.Component {\n  constructor() {\n    super('CatchEvent');\n  }\n\n  builder(node) {\n    var inp = new Rete.Input('event', '=', catch_socket, true);\n    var out = new Rete.Output('next', 'Next', next_socket);\n    var ctrl = new TextControl(this.editor, 'event', node);\n    return node\n      .addInput(inp)\n      .addOutput(out)\n      .addControl(ctrl);\n  }\n}\n\nclass ChoiceEventComponent extends Rete.Component {\n  constructor() {\n    super('ChoiceEvent');\n  }\n\n  builder(node) {\n    var inp = new Rete.Input('event', '=', choice_socket);\n    var out = new Rete.Output('next', 'Next', next_socket);\n    var ctrl = new TextControl(this.editor, 'event', node);\n    return node\n      .addInput(inp)\n      .addOutput(out)\n      .addControl(ctrl);\n  }\n}\n\nexport const init = async (container, graph) => {\n  if (!container) return;\n  var components = [\n    new TaskComponent(),\n    new ChoiceComponent(),\n    new WaitComponent(),\n    new ChoiceEventComponent(),\n    new CatchEventComponent(),\n    new TransitionEventComponent(),\n  ];\n\n  var editor = new Rete.NodeEditor('states-language@0.1.0', container);\n  editor.use(ConnectionPlugin);\n  editor.use(ReactRenderPlugin, { component: MyNode });\n  editor.use(ContextMenuPlugin);\n  editor.use(AreaPlugin);\n  editor.use(MinimapPlugin);\n  editor.use(AutoArrangePlugin, { margin: { x: 50, y: 50 }, depth: 0 });\n\n  components.map(c => editor.register(c));\n\n  editor.on(\n    'process nodecreated noderemoved connectioncreated connectionremoved',\n    async () => {\n      let graph = editor.toJSON();\n      let d3_graph = editor_d3(graph);\n      let states_language_graph = editor_states_language(graph);\n      store.dispatch(doSetD3Graph(d3_graph));\n      store.dispatch(doSetStatesLanguageGraph(states_language_graph));\n    }\n  );\n\n  editor.fromJSON(states_language_editor(graph));\n\n  setTimeout(function() {\n    editor.view.resize();\n    editor.trigger('process');\n    editor.trigger('arrange');\n    AreaPlugin.zoomAt(editor);\n  }, 200);\n};\n","import React, { useEffect } from 'react';\nimport * as dagreD3 from 'dagre-d3';\nimport * as d3 from 'd3';\n\nfunction DagreD3({ width, height, edges, nodes, onClick }) {\n  let nodeTree, nodeTreeGroup;\n\n  useEffect(() => {\n    let g = new dagreD3.graphlib.Graph({ multigraph: true }).setGraph({});\n    nodes.forEach(function(st) {\n      g.setNode(st.name, { label: st.name });\n    });\n    edges.forEach(link => {\n      let name =\n        nodes[link.source].name +\n        '-' +\n        nodes[link.target].name +\n        '-' +\n        link.type;\n      g.setEdge(\n        nodes[link.source].name,\n        nodes[link.target].name,\n        { label: link.type.join(',') },\n        name\n      );\n    });\n\n    g.nodes().forEach(function(v) {\n      var node = g.node(v);\n      node.rx = node.ry = 5;\n    });\n\n    // Set up an SVG group so that we can translate the final graph.\n    let svg = d3.select(nodeTree);\n    let inner = d3.select(nodeTreeGroup);\n\n    var zoom = d3.zoom().on('zoom', function() {\n      inner.attr('transform', d3.event.transform);\n    });\n    svg.call(zoom);\n\n    var render = new dagreD3.render();\n\n    render(inner, g);\n\n    var initialScale = 0.7;\n    svg.call(zoom.transform, d3.zoomIdentity.scale(initialScale));\n\n    // svg.attr('height', g.graph().height * initialScale + 20);\n\n    svg.selectAll('.dagre-d3 .node').on('click', id => {\n      g.nodes().forEach(v => g.node(v).elem.classList.remove('selected'));\n      g.node(id).elem.classList.add('selected');\n    });\n  }, [edges, nodes, nodeTree, nodeTreeGroup, onClick]);\n\n  return (\n    <svg\n      className=\"dagre-d3\"\n      ref={r => (nodeTree = r)}\n      width={width}\n      height={height}\n    >\n      <g ref={r => (nodeTreeGroup = r)} />\n    </svg>\n  );\n}\n\nexport default DagreD3;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport DagreD3 from './DagreD3React';\n\nfunction Graph() {\n  const graph = useSelector(state => state.d3_graph);\n\n  return (\n    <div>\n      <DagreD3\n        edges={graph.edges}\n        nodes={graph.nodes}\n        width=\"100%\"\n        height=\"60vh\"\n      />\n    </div>\n  );\n}\n\nexport default Graph;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  doSetStatesLanguageGraph,\n  doSetGraphLoaded,\n  doSetStatesLanguageEditorGraph,\n} from './actions';\nimport Button from '@material-ui/core/Button';\nimport store from './store';\n\nfunction JSONDisplay() {\n  const graph = useSelector(state => state.states_language_graph);\n\n  const onChange = e => {\n    try {\n      console.log(e.target.value);\n      let obj = JSON.parse(e.target.value);\n      store.dispatch(doSetStatesLanguageGraph(obj));\n    } catch (e) {\n      console.log(e);\n      console.log('JSON is still invalid');\n    }\n    return true;\n  };\n\n  const update = e => {\n    store.dispatch(doSetGraphLoaded(false));\n    setTimeout(function() {\n      store.dispatch(doSetStatesLanguageEditorGraph());\n      store.dispatch(doSetGraphLoaded(true));\n    }, 500);\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={update}>\n        Reload\n      </Button>\n      <br />\n      <textarea\n        cols=\"100\"\n        rows=\"50\"\n        value={JSON.stringify(graph, undefined, 2)}\n        onChange={onChange}\n      />\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={update}>\n        Reload\n      </Button>\n    </div>\n  );\n}\n\nexport default JSONDisplay;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { init } from './editor';\nimport Graph from './Graph';\nimport JSONDisplay from './JSONDisplay';\nimport { useSelector } from 'react-redux';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: '70vh',\n  },\n}));\n\nfunction Homepage() {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const graph = useSelector(state => state.states_language_graph_editor);\n  const graph_loaded = useSelector(state => state.graph_loaded);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar)}>\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            States Language Editor\n          </Typography>\n          <IconButton color=\"inherit\"></IconButton>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"xl\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={8}>\n              <Paper className={fixedHeightPaper}>\n                <h2>Editor</h2>\n                {graph_loaded ? \n                  <div ref={el => init(el, graph)}></div> :\n                  <div>Loading...</div>\n                }\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={4}>\n              <Paper className={fixedHeightPaper}>\n                <h2>Graph</h2>\n                <Graph />\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <h2>JSON</h2>\n                <JSONDisplay />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React from 'react';\nimport Homepage from './Homepage.js';\nimport { Switch, Route, Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n\nconst App = () => (\n  <div className=\"App\">\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/\" component={Homepage} />\n        <Route path=\"/states-language-editor\" component={Homepage} />\n      </Switch>\n    </Router>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles.css';\n\nconst do_render = () =>\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\ndo_render();\n"],"sourceRoot":""}